LEVEL 1:
plane.turnLeft()
plane.turnLeft()
plane.move()

LEVEL 2:
#Type your code here!
if(plane.check() is not 'CLOUD'):
    plane.move()
if(plane.check() is not 'CLOUD'):
    plane.move()
if(plane.check() is not 'CLOUD'):
    plane.move()
if(plane.check() is not 'CLOUD'):
    plane.move()
if(plane.check() is not 'CLOUD'):
    plane.move()
if(plane.check() is not 'CLOUD'):
    plane.move()
if(plane.check() is not 'CLOUD'):
    plane.move()
if(plane.check() is not 'CLOUD'):
    plane.move()
if(plane.check() is not 'CLOUD'):
    plane.move()
if(plane.check() is not 'CLOUD'):
    plane.move()
if(plane.check() is not 'CLOUD'):
    plane.move()
plane.move()

LEVEL 3
#It's time to write some functions!

def helper(plane):
    plane.move()
    plane.move()
    plane.move()
    plane.move()

#Don't forget to actually call your function!
helper(plane)
plane.turnLeft()
helper(plane)
plane.turnRight()
helper(plane)
plane.turnRight()
helper(plane)
plane.turnLeft()
helper(plane)
plane.turnLeft()
helper(plane)
plane.turnRight()
helper(plane)
plane.turnRight()
helper(plane)
plane.turnLeft()
helper(plane)
plane.move()
plane.move()

#Here is a better solution.  <3 John
turn = 1
while True:
	while plane.check() != "CLOUD":
		if plane.check() == "TARGET":
			plane.move()
			return;
		plane.move()
	if turn <=1:
		plane.turnLeft()
	else:
		plane.turnRight()
	turn = (turn+1)%4

LEVEL 4:
for student in range(0,19):
    while not(plane.isAboveStudent()):
        plane.move()
    if not (plane.isAboveSally()):
        plane.dropWater()
while(plane.check() is not 'TARGET'):
    plane.move()
plane.move()

LEVEL 5:
#Let's find Sally!
max = 20
min = 0
toReturn = None
while(max >= min):
    mid = (min+max)/2
    a = plane.askName(mid)
    if(a=="SALLY"):
        return
    elif(a<"SALLY"):
        min = mid+1
    elif(a>"SALLY"):
        max = mid-1
    else:
        toReturn = mid
        break

LEVEL 6:
def loopy(plane, room):
    plane.markRoom()
    if plane.isRoomGoal():
        return False
    for n in plane.roomNeighbors(room):
        if not plane.isMarked(n):
            plane.goToRoom(n)
            b = loopy(plane, n)
            if b:
                plane.goToRoom(room)
            return True


a = plane.whereAmI()
loopy(plane,a)
